name: Map-it
description: 'Custom cycling maps from OpenStreetMap data'
attribution: Data Â© OpenStreetMap (and) contributors, ODbL
bounds: &world
  - -180
  - -85.05112877980659
  - 180
  - 85.05112877980659
format: pdf
interactivity: false
minzoom: 13
maxzoom: 13
srs: "+init=epsg:3857"

# Various parts to be included later on
_parts:
  extents: &extents
    extent: *world
    srs-name: "WGS84"
    srs: "+init=epsg:4326"
  extentsOSM: &extentsOSM
    extent: *world
    srs-name: "900913"
    srs: "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over"
  osm2pgsql: &osm2pgsql
    type: postgis
    host: postgres-osm 
    dbname: gis
    user: postgres
    password: postgres
    key_field: ""
    geometry_field: "way"
    extent: "-20037508,-20037508,20037508,20037508"

Stylesheet:
  - styles.mss

# Geometry
# linestring, point, polygon, raster

Layer:
- id: landuse-background
  geometry: polygon
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          fclass
        FROM
          landuse_a
        WHERE
          way && !bbox! AND
          fclass IN (
            'forest'
          )
      ) AS data
- id: shade
  geometry: raster
  <<: *extents
  Datasource:
    type: gdal
    file: data/combined.tif
- id: contours
  geometry: linestring
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          height,
          CASE
            WHEN (MOD(height::int, 100) = 0) THEN 'yes'
            ELSE 'no'
          END as boundary
        FROM
          contours
        WHERE
          way && !bbox!
      ) AS data
- id: landuse-foreground
  geometry: polygon
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          fclass
        FROM
          landuse_a
        WHERE
          way && !bbox! AND
          fclass IN ('residential', 'military')
      ) AS data
- id: country
  geometry: linestring
  <<: *extentsOSM
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          admin_level
        FROM
          planet_osm_roads
        WHERE
          way && !bbox! AND
          boundary = 'administrative' AND
          admin_level in (
            '2'
          ) AND
          osm_id < 0
      ) AS data
- id: waterways
  geometry: linestring
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way
        FROM
          waterways
        WHERE
          way && !bbox!
      ) AS data
- id: water
  geometry: linestring
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way
        FROM
          water_a
        WHERE
          way && !bbox!
      ) AS data
- id: springs
  geometry: point
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way
        FROM
          natural_a
        WHERE
          way && !bbox! AND
          fclass IN ('spring')
      ) AS data
- id: cycling-network
  geometry: linestring
  <<: *extentsOSM
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way
        FROM
          planet_osm_line
        WHERE
          way && !bbox! AND
          route = 'bicycle'
      ) AS data
- id: railways
  geometry: point
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way
        FROM
          railways
        WHERE
          way && !bbox! AND
          fclass IN ('rail')
      ) AS data
- id: roads
  geometry: linestring
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          fclass,
          bridge,
          ref
        FROM
          roads
        WHERE
          way && !bbox!
      ) AS data
- id: power-line
  geometry: linestring
  <<: *extentsOSM
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way
        FROM
          planet_osm_line
        WHERE
          way && !bbox! AND
          power = 'line'
      ) AS data
- id: cycling-nodes
  geometry: point
  <<: *extentsOSM
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way
        FROM
          planet_osm_point
        WHERE
          way && !bbox! AND
          (tags->'rcn_ref') is not null AND
          (tags->'network:type') = 'node_network'
      ) AS data
- id: power-pole
  geometry: point
  <<: *extentsOSM
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way
        FROM
          planet_osm_point
        WHERE
          way && !bbox! AND
          power = 'tower'
      ) AS data
- id: places
  geometry: point
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          fclass,
          name
        FROM
          places
        WHERE
          way && !bbox! AND
          name IS NOT NULL
          AND
            fclass IN (
              'national_capital',
              'city',
              'town',
              'village',
              'hamlet',
              'suburb',
              'locality'
            )
          AND
            (fclass != 'locality' OR population > 0)
      ) AS data
- id: transport
  geometry: point
  <<: *extents
  Datasource:
   <<: *osm2pgsql
   table: |-
     (
       SELECT
         way,
         fclass
       FROM
         transport
       WHERE
         way && !bbox! AND
         fclass IN (
           'transport',
           'railway_station',
           'ferry_terminal',
           'railway_halt',
           'airfield',
           'airport'
         )
     ) AS data
- id: cycling-nodes-labels
  geometry: point
  <<: *extentsOSM
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          ST_PointOnSurface(ST_Union(nodes.way)) as way,
          nodes.ref
        FROM (
            SELECT
              way,
              (tags->'rcn_ref') as ref
            FROM
              planet_osm_point
            WHERE
              way && !bbox! AND
              (tags->'rcn_ref') is not null AND
              (tags->'network:type') = 'node_network'
        ) nodes
        GROUP BY
          nodes.ref,
          ST_SnapToGrid(ST_Transform(nodes.way, 3785), 3000)
      ) AS data
- id: poi
  geometry: point
  <<: *extents
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          fclass
        FROM
          poi
        WHERE
          way && !bbox! AND
          fclass IN (
             'camp_site',
             'hospital',
             'swimming_pool',
             'caravan_site',
             'supermarket',
             'bicycle_shop',
             'castle',
             'fort',
             'ruins',
             'tower_comms',
             'tower_observation',
             'tower',
             'lighthouse'
          )

        UNION ALL

        SELECT
          ST_PointOnSurface(way) AS way,
          fclass
        FROM
          poi_a
        WHERE
          way && !bbox! AND
          fclass IN (
            'camp_site',
            'hospital',
            'swimming_pool',
            'caravan_site',
            'supermarket',
            'bicycle_shop',
            'castle',
            'fort',
            'ruins',
            'tower_comms',
            'tower_observation',
            'tower',
            'lighthouse'
          )
      ) AS data
- id: religious
  geometry: point
  <<: *extentsOSM
  Datasource:
    <<: *osm2pgsql
    table: |-
      (
        SELECT
          way,
          religion
        FROM
          planet_osm_point
        WHERE
          way && !bbox! AND
          amenity = 'place_of_worship' AND
          (historic IS NULL OR historic != 'wayside_shrine')

        UNION ALL

        SELECT
          ST_PointOnSurface(way) as way,
          religion
        FROM
          planet_osm_polygon
        WHERE
          way && !bbox! AND
          amenity = 'place_of_worship' AND
          (historic IS NULL OR historic != 'wayside_shrine')
      ) AS data
