version: v1.0
name: Docker
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804

global_job_config:
  prologue:
    commands:
      - checkout
  env_vars:
    - name: DOCKER_BUILDKIT
      value: '1'
    - name: COMPOSE_DOCKER_CLI_BUILD
      value: '1'
    - name: BUILDKIT_PROGRESS
      value: plain

auto_cancel:
  running:
    when: "branch != 'master'"

blocks:
  - name: Build and run
    task:
      secrets:
        - name: usgs
        - name: dockerhub
      jobs:
        - name: Build and run Docker images
          commands:
            - echo $DOCKERHUB_PASSWORD | docker login --username "$DOCKERHUB_USERNAME" --password-stdin
            - cache restore data-`date +%Y-%m`

            # Set environment variables
            - cp .env.dist .env
            - sed -i "s/BBOX=.*/BBOX=43.3146:41.49:43.8202:41.8238/" .env
            - sed -i "s/USGS_USERNAME=.*/USGS_USERNAME=$USGS_USERNAME/" .env
            - sed -i "s/USGS_PASSWORD=.*/USGS_PASSWORD=$USGS_PASSWORD/" .env

            - export DOCKER_COMPOSE="docker-compose -f docker-compose.yml -f docker-compose.ci.yml"

            # Build everything
            - |
              $DOCKER_COMPOSE \
                build \
                --build-arg BUILDKIT_INLINE_CACHE=1 \
                map-it map-it-bounds map-it-import

            # Run database
            - |
              $DOCKER_COMPOSE \
                up \
                -d \
                postgres-osm
            - |
              until $DOCKER_COMPOSE exec postgres-osm pg_isready; do
                echo "Sleeping 1 second"
                sleep 1
              done

            # Run import for small area
            - BBOX=$($DOCKER_COMPOSE run map-it-bounds)
            - sed -i "s/BBOX=.*/BBOX=$BBOX/" .env
            - 'echo "Bounding box: $BBOX"'
            - $DOCKER_COMPOSE run map-it-import
            - $DOCKER_COMPOSE run map-it
            - artifact push workflow --expire-in 2w output/map.pdf

            - sed -i "s/BBOX=.*/BBOX=43.4715:41.3965:43.5077:41.4180/" .env
            - $DOCKER_COMPOSE run map-it bash with_mapnik_environment.sh python3 generate.py
            - artifact push workflow --expire-in 2w output/tiles/12/2543/1529.png

            - cache store data-`date +%Y-%m` data

            # Publish images
            - |
              $DOCKER_COMPOSE \
                push \
                map-it map-it-bounds map-it-import
